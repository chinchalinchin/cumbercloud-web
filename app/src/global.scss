@use "sass:map";
@use "~@angular/material" as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $primary-palette: map.get($color-config, "primary");
  $accent-palette: map.get($color-config, "accent");
  $warn-palette: map.get($color-config, "warn");

  mat-error {
    color: map-get($warn-palette, A400) !important;
  }
  mat-card {
    color: map-get($primary-palette, default-contrast) !important;
    background-color: map-get($primary-palette, 900) !important;
  }
  .bg-white {
    background-color: map-get($primary-palette, default-contrast);
  }
  .bg-primary {
    background-color: map-get($primary-palette, 500);
  }
  .text-default {
    color: map-get($primary-palette, lighter-contrast);
  }
  .text-white {
    color: map-get($primary-palette, default-contrast);
  }
  .text-primary {
    color: map-get($primary-palette, 500);
  }
  .text-primary-light {
    color: map-get($primary-palette, 50);
  }
  .text-primary-dark {
    color: map-get($primary-palette, 800);
  }
  .text-accent {
    color: map-get($accent-palette, 500);
  }
  .cloud-text {
    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
  }
  .btn-primary-theme {
    color: map-get($primary-palette, default-contrast);
    background-color: map-get($primary-palette, 500);
    border: 1px solid map-get($primary-palette, 500);
  }
  .btn-white-theme {
    background: map-get($primary-palette, default-contrast);
    color: map-get($primary-palette, 500);
    border: 1px solid map-get($primary-palette, 500);
  }
  // .border-accent{
  //   border-color: map-get($accent-palette, 900);
  // }

  /* Track */
  ::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px map-get($accent-palette, 400);
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: map-get($primary-palette, 700);
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: map-get($primary-palette, 300);
  }

  ::-webkit-input-placeholder,
  ::-moz-placeholder,
  :-ms-input-placeholder,
  :-moz-placeholder {
    color: map-get($primary-palette, 700);
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
